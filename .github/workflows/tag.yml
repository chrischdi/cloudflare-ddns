name: release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1

    - name: Set up Go
      uses: actions/setup-go@93397bea11091df50f3d7e59dc26a7711a8bcfbe # tag=v4.1.0
      with:
        go-version: "1.21.3"

    - name: build binaries and tar balls
      run: |
        ./build.sh

    - name: build docker images
      run: |
        TAG="$(./hack/version.sh)"
        
        for ARCH in amd64 arm64 arm; do
          cp bin/linux/${ARCH}/cloudflare-ddns .
          docker build -t chrischdi/cloudflare-ddns:${TAG}-linux-amd64 .
          rm cloudflare-ddns
        done
        
        docker manifest create \
          "chrischdi/cloudflare-ddns:${TAG}" \
          --amend "chrischdi/cloudflare-ddns:${TAG}-linux-amd64" \
          --amend "chrischdi/cloudflare-ddns:${TAG}-linux-arm" \
          --amend "chrischdi/cloudflare-ddns:${TAG}-linux-arm64"

    - name: generate changelog from git
      run: |
        TAG="$(./hack/version.sh)"
        echo "Image is available at \`chrischdi/cloudflare-ddns:${TAG}\`." > ${{ github.workflow }}-CHANGELOG.txt
        git log --format=format:"* %h %s" $(git describe --tags --abbrev=0 @^)..@ >> ${{ github.workflow }}-CHANGELOG.txt

    - name: Docker login
      run: |
        mkdir -p ~/.docker
        echo "${REGISTRY_SECRET}" > ~/.docker/config.json
      env:
        REGISTRY_SECRET: ${{ secrets.REGISTRY_SECRET }}

    - name: Push docker images
      run: |
        TAG="$(./hack/version.sh)"
        for ARCH in amd64 arm64 arm; do
          docker push chrischdi/cloudflare-ddns:${TAG}-linux-${ARCH}
        done
        
        docker manifest push "chrischdi/cloudflare-ddns:${TAG}"
      env:
        DOCKER_CLI_EXPERIMENTAL: enabled

    - name: Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "tar/cloudflare-ddns-linux-amd64.tar.gz,tar/cloudflare-ddns-linux-arm.tar.gz,tar/cloudflare-ddns-linux-arm64.tar.gz,LICENSE"
        bodyFile: "${{ github.workflow }}-CHANGELOG.txt"
        token: ${{ secrets.GITHUB_TOKEN }}
        draft: true
